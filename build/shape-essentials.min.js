_shape_initialized_="undefined"!=typeof SHAPE_ESSENTIALS,"undefined"==typeof ESSENTIALS_CORE?console.error("Shape Essentials depends on the Essentials Core."):(SHAPE_ESSENTIALS=!0,_silent_||_shape_initialized_||console.info("%cShape Essentials",_console_style_)),circle=(t,a,r)=>e.ellipse(t,a,r,r),blurRect=(t,a,r,n,s)=>{s<=0||(s=e.constrain(s,0,Math.min(r,n)),e.image(e.get(t,a,r,n),t,a,r/s,n/s),e.image(e.get(t,a,r/s,n/s),t,a,r,n))},cylinder=(t,a,r,n)=>{if(r=Math.abs(r),n=Math.abs(n),push(),e.translate(t,a),n>r){const t=Math.cos(Math.PI)<0?e.TWO_PI:360;e.rotate(t/4),cylinder(0,0,n,r)}else{const t=n/2,a=(r-n)/2,s=4/3*(Math.sqrt(2)-1)*t;drawShape((()=>{e.vertex(a,-t),e.bezierVertex(a+s,-t,a+t,-s,a+t,0),e.bezierVertex(a+t,s,a+s,t,a,t),e.vertex(-a,t),e.bezierVertex(-a-s,t,-a-t,s,-a-t,0),e.bezierVertex(-a-t,-s,-a-s,-t,-a,-t)}),!0)}pop()},dashedLine=(t,a,r,n,s=10,i=10,o=!0,l=!0)=>{const d=e.dist(t,a,r,n);let h=0;for(;h<=d-s;h+=s+2*i)e.line(e.map(h,0,d,t,r),e.map(h,0,d,a,n),e.map(h+s,0,d,t,r),e.map(h+s,0,d,a,n));o&&h<d&&e.line(e.map(h,0,d,t,r),e.map(h,0,d,a,n),r,n),l&&h>=d&&e.point(r+.5,n+.5)},dashedEdge=(t,a,r,n=0,s=10,i=10,o=!0,l=!0)=>{"degrees"==angleMode&&(n=e.radians(n));const d=t+r*Math.cos(n),h=a+r*Math.sin(n);dashedLine(t,a,d,h,s,i,o,l)},donut=(t,a,r,n)=>{const s=4/3*(Math.sqrt(2)-1);push(),e.translate(t,a),push(),e.noStroke(),drawShape((()=>{let t=n/2,a=s*t;e.vertex(t,0),e.bezierVertex(t,a,a,t,0,t),e.bezierVertex(-a,t,-t,a,-t,0),e.bezierVertex(-t,-a,-a,-t,0,-t),e.bezierVertex(a,-t,t,-a,t,0),t=r/2,a=s*t,e.vertex(t,0),e.bezierVertex(t,-a,a,-t,0,-t),e.bezierVertex(-a,-t,-t,-a,-t,0),e.bezierVertex(-t,a,-a,t,0,t),e.bezierVertex(a,t,t,a,t,0)}),!0),pop(),push(),e.noFill(),circle(0,0,n),circle(0,0,r),pop(),pop()},dottedEdge=(t,a,r,n=0,s=10,i=!0)=>{"degrees"==angleMode&&(n=e.radians(n));const o=t+r*Math.cos(n),l=a+r*Math.sin(n);dottedLine(t,a,o,l,s,i)},drawShape=(t,a,r)=>{a=a&&e.CLOSE,e.beginShape(r),t(),e.endShape(a)},dottedLine=(t,a,r,n,s=10,i=!0)=>{const o=e.dist(t,a,r,n);for(let i=0;i<o;i+=s)e.point(e.map(i,0,o,t,r),e.map(i,0,o,a,n));i&&e.point(r,n)},edge=(t,a,r,n=0)=>{"degrees"==angleMode&&(n=e.radians(n));const s=t+r*Math.cos(n),i=a+r*Math.sin(n);line(t,a,s,i)},heart=(t,a,r)=>{const n=a-2*r/5,s=a+r,i=a-6*r/5,o=a-2*r/5;let l=t+r/2,d=t+9*r/5;drawShape((()=>{e.vertex(t,n),e.bezierVertex(l,i,d,o,t,s),l=2*t-l,d=2*t-d,e.bezierVertex(d,o,l,i,t,n)}),!0)},polygon=(t,a,r,n,s)=>{const i=Math.cos(Math.PI)<0?2*Math.PI:360;push(),e.translate(t,a),e.rotate(null==s?-i/4:s),drawShape((()=>{for(let t=0;t<i;t+=i/r)e.vertex(n*Math.cos(t),n*Math.sin(t))}),!0),pop()},parallelogram=(t,a,r,n,s,i)=>{const o=r-t,l=n-a;e.quad(t,a,r,n,s+o,i+l,s,i)},rectangle=(t,a,r,n=r,s,i,o,l)=>{null==s?e.rect(t,a,r,n):null==i?e.rect(t,a,r,n,s):null==o?e.rect(t,a,r,n,s,s,i,i):null==l?e.rect(t,a,r,n,s,i,o,0):e.rect(t,a,r,n,s,i,o,l)},rhombus=(t,a,r,n,s,i)=>{const o=e.dist(t,a,r,n)/e.dist(t,a,s,i);s=t+o*(s-t),i=a+o*(i-a),parallelogram(t,a,r,n,s,i)},square=(t,a,r,n,s,i,o)=>{null==n?e.rect(t,a,r,r):null==s?e.rect(t,a,r,r,n):null==i?e.rect(t,a,r,r,n,n,s,s):null==o?e.rect(t,a,r,r,n,s,i,0):e.rect(t,a,r,r,n,s,i,o)},star=(t,a,r,n=5,s)=>{const i=Math.cos(Math.PI)<0?e.TWO_PI:360,o=r*Math.sin(.05*i)/Math.sin(.35*i);push(),e.translate(t,a),e.rotate(null==s?-i/4:s),drawShape((()=>{let t;for(let a=0;a<i;a+=i/(2*n))t=t===r?o:r,e.vertex(t*Math.cos(a),t*Math.sin(a))}),!0),pop()},trapezoid=(t,a,r,n,s)=>{const i=Math.max(n,s);e.quad(t+(i-n)/2,a,t+(i-n)/2+n-1,a,t+(i-s)/2+s-1,a+r-1,t+(i-s)/2,a+r-1)};