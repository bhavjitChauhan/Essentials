_shape_initialized_="undefined"!=typeof SHAPE_ESSENTIALS,"undefined"==typeof ESSENTIALS_CORE?console.error("Shape Essentials depends on the Essentials Core."):(SHAPE_ESSENTIALS=!0,_silent_||_shape_initialized_||console.info("%cShape Essentials",_console_style_)),getStrokeCap=()=>ctx.lineCap,getStrokeJoin=()=>ctx.lineJoin,getStrokeWeight=()=>ctx.lineWidth,noStrokeDash=()=>strokeDash(),circle=(e,t,r)=>p.ellipse(e,t,r,r),cylinder=(e,t,r,a)=>{if(r=Math.abs(r),a=Math.abs(a),p.pushMatrix(),p.translate(e,t),a>r){const e=Math.cos(Math.PI)<0?p.TWO_PI:360;p.rotate(e/4),cylinder(0,0,a,r)}else{const e=a/2,t=(r-a)/2,s=4/3*(Math.sqrt(2)-1)*e;drawShape((()=>{p.vertex(t,-e),p.bezierVertex(t+s,-e,t+e,-s,t+e,0),p.bezierVertex(t+e,s,t+s,e,t,e),p.vertex(-t,e),p.bezierVertex(-t-s,e,-t-e,s,-t-e,0),p.bezierVertex(-t-e,-s,-t-s,-e,-t,-e)}),!0)}p.popMatrix()},donut=(e,t,r,a)=>{const s=4/3*(Math.sqrt(2)-1);p.pushMatrix(),p.translate(e,t),p.pushStyle(),p.noStroke(),drawShape((()=>{let e=a/2,t=s*e;p.vertex(e,0),p.bezierVertex(e,t,t,e,0,e),p.bezierVertex(-t,e,-e,t,-e,0),p.bezierVertex(-e,-t,-t,-e,0,-e),p.bezierVertex(t,-e,e,-t,e,0),e=r/2,t=s*e,p.vertex(e,0),p.bezierVertex(e,-t,t,-e,0,-e),p.bezierVertex(-t,-e,-e,-t,-e,0),p.bezierVertex(-e,t,-t,e,0,e),p.bezierVertex(t,e,e,t,e,0)}),!0),p.popStyle(),p.pushStyle(),p.noFill(),circle(0,0,a),circle(0,0,r),p.popStyle(),p.popMatrix()},drawShape=(e,t,r)=>{t=t&&p.CLOSE,p.beginShape(r),e(),p.endShape(t)},edge=(e,t,r,a=0)=>{"degrees"==p.angleMode&&(a=p.radians(a));const s=e+r*Math.cos(a),n=t+r*Math.sin(a);p.line(e,t,s,n)},getRotation=(e="degrees"==p.angleMode,t=ctx.getTransform())=>{let r=Math.atan2(t.b,t.a);return r<0&&(r+=2*Math.PI),e?p.degrees(r):r},heart=(e,t,r)=>{const a=t-2*r/5,s=t+r,n=t-6*r/5,l=t-2*r/5;let i=e+r/2,o=e+9*r/5;drawShape((()=>{p.vertex(e,a),p.bezierVertex(i,n,o,l,e,s),i=2*e-i,o=2*e-o,p.bezierVertex(o,l,i,n,e,a)}),!0)},parallelogram=(e,t,r,a,s,n)=>{const l=r-e,i=a-t;p.quad(e,t,r,a,s+l,n+i,s,n)},polygon=(e,t,r,a,s)=>{const n=Math.cos(Math.PI)<0?2*Math.PI:360;p.pushMatrix(),p.translate(e,t),p.rotate(null==s?-n/4:s),drawShape((()=>{for(let e=0;e<n;e+=n/r)p.vertex(a*Math.cos(e),a*Math.sin(e))}),!0),p.popMatrix()},rectangle=(e,t,r,a=r,s,n,l,i)=>{null==s?p.rect(e,t,r,a):null==n?p.rect(e,t,r,a,s):null==l?p.rect(e,t,r,a,s,s,n,n):null==i?p.rect(e,t,r,a,s,n,l,0):p.rect(e,t,r,a,s,n,l,i)},square=(e,t,r,a,s,n,l)=>{null==a?p.rect(e,t,r,r):null==s?p.rect(e,t,r,r,a):null==n?p.rect(e,t,r,r,a,a,s,s):null==l?p.rect(e,t,r,r,a,s,n,0):p.rect(e,t,r,r,a,s,n,l)},rhombus=(e,t,r,a,s,n)=>{const l=p.dist(e,t,r,a)/p.dist(e,t,s,n);s=e+l*(s-e),n=t+l*(n-t),parallelogram(e,t,r,a,s,n)},star=(e,t,r,a=5,s)=>{const n=Math.cos(Math.PI)<0?p.TWO_PI:360,l=r*Math.sin(.05*n)/Math.sin(.35*n);p.pushMatrix(),p.translate(e,t),p.rotate(null==s?-n/4:s),drawShape((()=>{let e;for(let t=0;t<n;t+=n/(2*a))e=e===r?l:r,p.vertex(e*Math.cos(t),e*Math.sin(t))}),!0),p.popMatrix()},strokeDash=(...e)=>ctx.setLineDash(e),trapezoid=(e,t,r,a,s)=>{const n=Math.max(a,s);p.quad(e+(n-a)/2,t,e+(n-a)/2+a-1,t,e+(n-s)/2+s-1,t+r-1,e+(n-s)/2,t+r-1)},strokeDashOffset=e=>ctx.lineDashOffset=e;